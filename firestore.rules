rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isVerified() {
      return isSignedIn() && request.auth.token.email_verified;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Brands collection
    match /brands/{brandId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Bags collection
    match /bags/{bagId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Listings collection
    match /listings/{listingId} {
      allow read: if true;
      allow create: if isVerified();
      allow update: if isVerified() && (
        resource.data.owner.id == request.auth.uid || isAdmin()
      );
      allow delete: if isVerified() && (
        resource.data.owner.id == request.auth.uid || isAdmin()
      );
    }
    
    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isVerified();
      allow update, delete: if isVerified() && (
        resource.data.userId == request.auth.uid || isAdmin()
      );
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        resource.data.listingOwnerId == request.auth.uid ||
        isAdmin()
      );
      allow create: if isVerified();
      allow update: if isVerified() && (
        resource.data.userId == request.auth.uid ||
        resource.data.listingOwnerId == request.auth.uid ||
        isAdmin()
      );
      allow delete: if isAdmin();
    }
    
    // Short URLs collection
    match /shortUrls/{urlId} {
      allow read: if true;
      allow write: if isVerified();
    }
  }
}